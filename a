Python 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 22:45:29) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> int(5/2)
2
>>> int(5/2)
2
>>>
>>> int(5/2)
2
>>> int(5/2)
2
>>>
>>> print('Anmol\'s laptop')
Anmol's laptop
>>> print('Anmol\\')
Anmol\
>>> print('anmol\\n')
anmol\n
>>> 5>2
True
>>> 5==3
False
>>> 5=3
  File "<stdin>", line 1
SyntaxError: cannot assign to literal
>>> x=2
>>> y=3
>>> x+y
5
>>> _+4
9
>>> name=anmol
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'anmol' is not defined
>>> name='anmol'
>>> name, 'singh'
('anmol', 'singh')
>>> print(name, 'singh')
anmol singh
>>> name+'singh'
'anmolsingh'
>>> name+' singh'
'anmol singh'
>>> x='supercalifragilisticexpialidocious'
>>> x[0:-1]
'supercalifragilisticexpialidociou'
>>> x[0::1]
'supercalifragilisticexpialidocious'
>>> x[0::2]
'sprairglsiepaioiu'
>>> x[0::3]
'seafgiixadis'
>>> len(x)
34

lists
>>> name=['anmol','sandeep','labh']
>>> num=[1,2,3,4,5,6,7,8,9,10]
>>> join=[num,name]
>>> join
[[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], ['anmol', 'sandeep', 'labh']] #contain two lists as element
>>> num.append(11)
>>> num
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] #adds at the end
>>> num.insert(5,12) #inserts at position specified
>>> num
[1, 2, 3, 4, 5, 12, 6, 7, 8, 9, 10, 11]  
>>> num.remove(12)  #removes the element 12
>>> num
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
>>> num.pop(12) #removes the element at index 12
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: pop index out of range
>>> num.pop(5) #removes the value at index 5 not value 5
6
>>> num
[1, 2, 3, 4, 5, 7, 8, 9, 10, 11]
>>> num.pop() #removes the last element
11
>>> num
[1, 2, 3, 4, 5, 7, 8, 9, 10]
>>> num.remove()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: remove() takes exactly one argument (0 given)
>>> del num[2:4]  #removes within the range of index
>>> num
[1, 2, 5, 7, 8, 9, 10]
>>> num.pop(2:4)
  File "<stdin>", line 1
    num.pop(2:4)
             ^
SyntaxError: invalid syntax
>>> num.extend([11,13,14]) #remember the [] brackets
>>> num
[1, 2, 5, 7, 8, 9, 10, 11, 13, 14]
>>> min num
  File "<stdin>", line 1
    min num
        ^
SyntaxError: invalid syntax
>>> min(num)
1
>>> max(num)
14
>>> sum(num)
80
>>> sort(num)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'sort' is not defined
>>> num.sort()
>>> num
[1, 2, 5, 7, 8, 9, 10, 11, 13, 14]
>>> name.sort()
>>> name
['anmol', 'labh', 'sandeep']
>>> join=name+num
>>> join
['anmol', 'labh', 'sandeep', 1, 2, 5, 7, 8, 9, 10, 11, 13, 14]
>>> mul=name*2
>>> mul
['anmol', 'labh', 'sandeep', 'anmol', 'labh', 'sandeep']
>>> join=num.extend(name)
>>> join
>>> join
>>> num
[1, 2, 5, 7, 8, 9, 10, 11, 13, 14, 'anmol', 'labh', 'sandeep']
>>> num.clear()
>>> num
[]
>>> del name()
  File "<stdin>", line 1
SyntaxError: cannot delete function call
>>> del name[]
  File "<stdin>", line 1
    del name[]
             ^
SyntaxError: invalid syntax
>>> del name
>>> name
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'name' is not defined
>>>
set=set(list)
>>> set
{1, 2, 3, 4, 6, 46, 23}
>>> set.discard(4)
>>> set
{1, 2, 3, 6, 46, 23}
>>> set.add(45)
>>> set
{1, 2, 3, 6, 45, 46, 23}
>>> set
{1, 2, 3, 6, 45, 46, 23}
>>> set.add(6)
>>> set
{1, 2, 3, 6, 45, 46, 23}
>>> #no duplicate values
>>> set.add(6748)
>>> set
{1, 2, 3, 6, 45, 46, 23, 6748}
>>> set1 = {"a", "b" , "c"}
set2 = {1, 2, 3}

set3 = set1.union(set2)
SyntaxError: multiple statements found while compiling a single statement
>>> set1={'anmol','virk'}
>>> set.update(set1)
>>> set
{1, 2, 3, 6, 45, 46, 'virk', 23, 6748, 'anmol'}
>>> set.union(set1)
{1, 2, 3, 6, 45, 46, 'virk', 23, 6748, 'anmol'}
>>> set
{1, 2, 3, 6, 45, 46, 'virk', 23, 6748, 'anmol'}
>>> #union is like an operator it does not update the set but gives a combination of sets.
>>> set={1,2,3}
>>> set1={3.4.5}
SyntaxError: invalid syntax
>>> set1={3,3,4,5}
>>> set1.difference(set)
{4, 5}
>>> #gives the difference between two sets
>>> set1.intersection(set)
{3}
>>> #gives the common elements of sets
>>> set.difference(set1)
{1, 2}
>>> #gives different elements of set from set1
>>> set2=zip(set,set1)
>>> set2
<zip object at 0x041F7BA8>
>>> set2=dic(set2)
Traceback (most recent call last):
  File "<pyshell#32>", line 1, in <module>
    set2=dic(set2)
NameError: name 'dic' is not defined
>>> set2=dict(set2)
>>> set2
{1: 3, 2: 4, 3: 5}
>>> #set 2 is a dictionary
>>> set2.items()
dict_items([(1, 3), (2, 4), (3, 5)])
>>> set2.values()
dict_values([3, 4, 5])
>>> set2.keys()
dict_keys([1, 2, 3])
>>> set2.pop(1)
3
>>> set2
{2: 4, 3: 5}
>>> del set2[2]
>>> set2
{3: 5}
>>> set2[1]=4
>>> set2
{3: 5, 1: 4}
>>> set2.get(3)
5
>>> set2.get(4)
>>> #no value for key 4
>>> 
